* Gopcaml-mode Todo
** DONE Update temporary highlight function to be less convoluted
   CLOSED: [2020-02-12 Wed 13:53]
** DONE Rebuild parse tree on changes
   CLOSED: [2020-02-14 Fri 12:59]
*** use after-change-functions to track changed location              :elisp:
*** use idle timer to queue update                                    :elisp:
*** setup function to rebuild region of parse tree                    :ocaml:
**** split list into three - before, in and after region
**** parse edited region and replace in section
**** otherwise, parse from start to eof and replace in and after
**** otherwise, reparse file
**** DONE otherwise drop changes
     CLOSED: [2020-02-14 Fri 12:59]
** DONE Implement highlight current expression
   CLOSED: [2020-02-14 Fri 13:28]
*** Iterate through structure item, find nearest enclosing bounds
** DONE Write zipper for AST
   CLOSED: [2020-02-14 Fri 18:23]
** DONE Implement go to parent
   CLOSED: [2020-02-14 Fri 18:22]
*** use zipper to move to parent
** DONE Use set-transient-map to implement a tmm
   CLOSED: [2020-02-14 Fri 18:22]
** DONE Swap code regions at the same level
   CLOSED: [2020-02-14 Fri 17:05]
*** use zipper to find bounds for both regions
*** perform swap in emacs using marker to remember the insert positions
** DONE Figure out how to include comments in enclosed region
   CLOSED: [2020-02-15 Sat 18:06]
** DONE Implement move up move down (rather than transpose) 
   CLOSED: [2020-02-15 Sat 11:10]
** DONE make zipper move to nearest enclosing scope on activation
   CLOSED: [2020-02-15 Sat 12:05]
** DONE integrate with merlin types (i.e print type of current zipper)
   CLOSED: [2020-02-15 Sat 12:20]
** DONE Goto nearest structure item (for C-M-a (tuareg is screwed up))
   CLOSED: [2020-02-17 Mon 18:06]
** DONE Fix issue with empty structures
   CLOSED: [2020-02-18 Tue 11:43]
** DONE Track lines in zipper
   CLOSED: [2020-02-18 Tue 13:20]
** DONE Remove type holes on edit
   CLOSED: [2020-02-18 Tue 18:57]
** DONE Add insertion capability?
   CLOSED: [2020-02-18 Tue 18:57]
** TODO Fix move to defun functionality to use lines
** TODO Setup move to let def to begin zipper mode
*** TODO C-M-a - move to start of defun & move zipper broadly to point and start zipper at structure item
*** TODO C-M-e - move to end of defun & move zipper broadly to point and start zipper at structure item
*** TODO C-M-u - backwards up list - move granularly to region, and move up zipper
*** TODO C-M-u - backwards up list - move granularly to region, and move down zipper
*** TODO - list expressions move forward without expanding the element
**** TODO C-M-n - forwards list - move granularly to region and move left zipper
**** TODO C-M-p - backwards list - move granularly to region and move left zipper
*** TODO - forwards expressions attempt to expand the item below it
**** TODO C-M-f - forwards sexp - move granularly to region and move forward zipper
**** TODO C-M-b - backwards sexp - move granularly to region and move backwards zipper
*** TODO - move zipper to point and kill
**** TODO C-M-k - kill sexp
**** TODO C-M-spc - mark sexp - move zipper to point and select region
*** TODO M-{, M-} - move paragraph - (i.e top level structure items)
*** TODO M-a, M-e - move sentences - module
*** TODO M-k - kill sentence - kill module
*** TODO C-M-l reposition to buffer - fix to work with ocaml
*** TODO C-M-t transpose sexp
* Longer term Todos
** TODO Implement move into
** TODO Implement move outof
** TODO Fix whitespace
** TODO move to (??) type holes with C-n C-p if present in function DWIM
*** Write function to check if current buffer contains any type holes
*** Write function to return position of next type hole
** TODO add expression and more functionality to zipper
** TODO integrate with merlin (d)estruct/(l)ocate
** TODO Extract binding
** TODO Highlight regions
*** Add function to find all repetitions of enclosing expression
*** add function to highlight all these bounds temporarily
*** add-on-idle function to run highlight on delay
* Gopcaml-mode Ideas
** Better move to defun recognition
*** If point on the same line, then use current item
*** Use line distance rather than character distance  (makes more sense)
*** In case of tie then use column

